{
  "swagger": "2.0",
  "info": {
    "version": "v7.0.0",
    "title": "RoyalLondon.SalesManagement.Api"
  },
  "host": "localhost",
  "basePath": "/SalesManagement.Api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/Applicants": {
      "get": {
        "tags": [
          "Applicants"
        ],
        "summary": "GET Applicants\r\nReturn a list of all applicants on the database.",
        "operationId": "Applicants_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "search.surname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search.firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adviserId",
            "in": "header",
            "description": "Retrieves a list of adviser ids from the ITR tree, retrieved adviser ids will be used to filter the response data. Only required for staff users to give adviser context.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Applicants"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Applicants"
        ],
        "summary": "POST Applicant\r\nCreate an Applicant.",
        "operationId": "Applicants_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Applicant to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateApplicant"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApplicantIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Applicants/{id}": {
      "get": {
        "tags": [
          "Applicants"
        ],
        "summary": "GET Applicant\r\nReturn a single Applicant, identified by the given ID.",
        "operationId": "Applicants_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the requested applicant.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Applicant"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Applicants"
        ],
        "summary": "PUT Applicant\r\nUpdate an Applicant.",
        "operationId": "Applicants_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Applicant to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Applicant values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateApplicant"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Applicants"
        ],
        "summary": "DELETE api/applicants/id\r\nDeletes a Applicant by id",
        "operationId": "Applicants_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the applicant to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Applicants"
        ],
        "summary": "Patch Applicant\r\nPatch Applicant details.",
        "operationId": "Applicants_Patch",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Applicant to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Applicant values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchApplicant"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/applicants/{applicantId}/authorisedThirdParties": {
      "get": {
        "tags": [
          "AuthorizedThirdParties"
        ],
        "summary": "Retrieve authorized third parties for the given applicant id",
        "operationId": "AuthorizedThirdParty_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "applicantId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthorizedThirdParties"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "AuthorizedThirdParties"
        ],
        "summary": "Create authorized third party for the given applicant id",
        "operationId": "AuthorizedThirdParties_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "applicantId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAuthorizedThirdParty"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApplicantIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/applicants/{applicantId}/authorisedThirdParties/{thirdPartyId}": {
      "put": {
        "tags": [
          "AuthorizedThirdParties"
        ],
        "summary": "Update authorized third party for the given applicant and third party id",
        "operationId": "AuthorizedThirdParties_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "applicantId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "thirdPartyId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAuthorizedThirdParty"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AuthorizedThirdParties"
        ],
        "summary": "Delete authorized third party",
        "operationId": "AuthorizedThirdParties_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "applicantId",
            "in": "path",
            "description": "An applicant id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "thirdPartyId",
            "in": "path",
            "description": "Authorized third party id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/bankAccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Retrieve bank accounts for a given policy",
        "operationId": "BankAccounts_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankAccounts"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Create a new bank account specific to the policy id provided",
        "operationId": "BankAccount_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Policy Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "bankAccount",
            "in": "body",
            "description": "New bank account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBankAccount"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/bankAccounts/{accountId}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "summary": "GET bank account by an accountId\r\nReturn a bank account details for a given account id.",
        "operationId": "BankAccount_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BankAccount"
        ],
        "summary": "Modify bank account details for a given account id and policy id",
        "operationId": "BankAccount_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Id of the policy for which to retrieve bank accounts.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Id for account for which to retrieve the details.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "bankAccount",
            "in": "body",
            "description": "Bank account values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBankAccount"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/beneficiaries": {
      "get": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "GET Beneficiaries\r\nReturn details of beneficiaries for a given proposal.",
        "operationId": "Beneficiaries_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Guid of the parent proposal for the requested beneficiaries",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BeneficiaryDetails"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "PUT Beneficiaries\r\nCreates or overwrites a given set of beneficiaries, as well as the beneficiary notes",
        "operationId": "Beneficiaries_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Details of Increment to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBeneficiaryDetails"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/beneficiaries/{beneficiaryId}": {
      "delete": {
        "tags": [
          "Beneficiaries"
        ],
        "summary": "DELETE Beneficiary\r\nDeletes a Beneficiary by Id",
        "operationId": "Beneficiaries_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "beneficiaryId",
            "in": "path",
            "description": "Guid of the beneficiary to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/flexibleAccess": {
      "get": {
        "tags": [
          "FlexibleAccess"
        ],
        "summary": "Get FlexibleAccess list\r\nQuery FlexibleAccess by newBusinessId",
        "operationId": "FlexibleAccess_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlexibleAccessList"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "FlexibleAccess"
        ],
        "summary": "PUT FlexibleAccess\r\nUpdate existing flexibleAccess based on FlexibleAccessId",
        "operationId": "FlexibleAccess_Put",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "New Business Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccess",
            "in": "body",
            "description": "FlexibleAccess general Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFlexibleAccess"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/flexibleAccessInstructions": {
      "get": {
        "tags": [
          "FlexibleAccessInstructions"
        ],
        "summary": "Query FlexibleAccessInstruction\r\nQuery Flexible Access Instructions.",
        "operationId": "FlexibleAccessInstructions_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "policyId",
            "in": "query",
            "description": "Policy Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlexibleAccessInstructions"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "FlexibleAccessInstructions"
        ],
        "summary": "POST FlexibleAccessInstruction\r\nCreate a Flexible Access Instruction.",
        "operationId": "FlexibleAccessInstructions_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Flexible Access Instruction to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlexibleAccessInstruction"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewBusinessIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/flexibleAccessInstructions/{flexibleAccessInstructionId}": {
      "put": {
        "tags": [
          "FlexibleAccessInstructions"
        ],
        "summary": "Put FlexibleAccessInstruction\r\nUpdate Flexible Access Instructions.",
        "operationId": "FlexibleAccessInstructions_Put",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID of flexibleAccessInstruction to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "flexibleAccessInstruction values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFlexibleAccessInstruction"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "FlexibleAccessInstructions"
        ],
        "summary": "Delete Flexible Access Instruction by Id",
        "operationId": "FlexibleAccessInstructions_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID of flexibleAccessInstruction to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/flexibleAccessInstructions/{flexibleAccessInstructionId}/WithdrawalFund": {
      "get": {
        "tags": [
          "WithdrawalFund"
        ],
        "summary": "Query WithdrawalFund.",
        "operationId": "WithdrawalFund_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID for flexibleAccessInstruction entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WithdrawalFunds"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "WithdrawalFund"
        ],
        "summary": "POST WithdrawalFund\r\nCreate a WithdrawalFund Instruction.",
        "operationId": "WithdrawalFund_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID for flexibleAccessInstruction entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "WithdrawalFund Instruction to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWithdrawalFund"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WithdrawalFundIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/flexibleAccessInstructions/{flexibleAccessInstructionId}/WithdrawalFund/{Id}": {
      "put": {
        "tags": [
          "WithdrawalFund"
        ],
        "summary": "Put WithdrawalFund\r\nUpdate WithdrawalFund Instruction.",
        "operationId": "WithdrawalFund_Put",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID of flexibleAccessInstruction to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Id",
            "in": "path",
            "description": "ID of WithdrawalFund Instruction to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "WithdrawalFund Instruction value to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWithdrawalFund"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "WithdrawalFund"
        ],
        "summary": "Delete WithdrawalFund Instruction by Id",
        "operationId": "WithdrawalFund_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "flexibleAccessInstructionId",
            "in": "path",
            "description": "ID of flexibleAccessInstruction to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Id",
            "in": "path",
            "description": "ID of WithdrawalFund Instruction to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/{quoteId}/illustrationStructure": {
      "get": {
        "tags": [
          "IllustrationStructure"
        ],
        "summary": "GET IllustrationStructure\r\nReturn the transformed IllustrationStructure of a Quote, given by ID",
        "operationId": "IllustrationStructure_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "Guid of the quote to be transformed.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IllustrationStructure"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/increments/{incrementId}/newProviders": {
      "get": {
        "tags": [
          "NewProviders"
        ],
        "summary": "GET NewProviders\r\nReturn a list of all NewProviders attached to a given proposal increment.",
        "operationId": "NewProviders_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the related increment",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NewProviders"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "NewProviders"
        ],
        "summary": "POST NewProvider\r\nCreate a NewProvider attached to a given increment",
        "operationId": "NewProviders_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the increment related to the new provider being added",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "NewProvider result to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNewProvider"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiable"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/increments/{incrementId}/newProviders/{providerId}": {
      "get": {
        "tags": [
          "NewProviders"
        ],
        "summary": "GET NewProvider\r\nReturn a single NewProvider, identified by the given ID.",
        "operationId": "NewProviders_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the related increment",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "ID of the new provider being requested",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NewProvider"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "NewProviders"
        ],
        "summary": "PUT NewProvider\r\nUpdate a NewProvider.",
        "operationId": "NewProviders_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the related increment",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "ID of the new provider being updated",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "NewProvider values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNewProvider"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Payers": {
      "get": {
        "tags": [
          "Payers"
        ],
        "summary": "GET Payer \r\nReturn a single Payer, identified by the given ID.",
        "operationId": "Payers_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "payerId",
            "in": "query",
            "description": "Payer Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Payer"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Payers"
        ],
        "summary": "PUT Payer\r\nUpdate existing payer based on PayerId",
        "operationId": "Payers_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "payerId",
            "in": "query",
            "description": "Payer Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "payer",
            "in": "body",
            "description": "Payer Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePayer"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Payers"
        ],
        "summary": "POST Payer Information\r\nCreate a new Payer",
        "operationId": "Payers_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "payer",
            "in": "body",
            "description": "Payer Information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePayer"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiable"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Payers"
        ],
        "summary": "Delete Payer\r\nDelete payer based on PayerId",
        "operationId": "Payers_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "payerId",
            "in": "query",
            "description": "Payer Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{id}/planStructure": {
      "get": {
        "tags": [
          "PlanStructure"
        ],
        "summary": "GET PlanStructure\r\nReturn the plan structure of a given proposal or quote id, with plans apportioned according",
        "operationId": "PlanStructure_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the proposal for which a plan structure has been requested.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlanStructure"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/charges": {
      "get": {
        "tags": [
          "ProposalAdviserCharges"
        ],
        "summary": "GET Proposal AdviserCharges\r\nReturn a list of all AdviserCharges records on a given Proposal.",
        "operationId": "ProposalAdviserCharges_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProposalAdviserCharges"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ProposalAdviserCharges"
        ],
        "summary": "PUT Proposal AdviserCharge\r\nUpdate a given set of charge records.",
        "operationId": "ProposalAdviserCharge_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Proposal AdviserCharge values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProposalAdviserCharges"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ProposalAdviserCharges"
        ],
        "summary": "POST Proposal AdviserCharge\r\nCreate a set of charge records for a given proposal.",
        "operationId": "ProposalAdviserCharge_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Charges to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposalAdviserCharges"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiables"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/charges/{chargeId}": {
      "get": {
        "tags": [
          "ProposalAdviserCharges"
        ],
        "summary": "GET Proposal AdviserCharge\r\nReturn a single AdviserCharge record, identified by the given IDs.",
        "operationId": "ProposalAdviserCharge_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "chargeId",
            "in": "path",
            "description": "ID of the AdviserCharge record to retrieve",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProposalAdviserCharge"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProposalAdviserCharges"
        ],
        "summary": "DELETE Proposal AdviserCharge\r\nDeletes an AdviserCharge record on a Proposal by id",
        "operationId": "ProposalAdviserCharge_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "chargeId",
            "in": "path",
            "description": "ID of the AdviserCharge record to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/increments": {
      "get": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "GET Increments\r\nReturn a list of all proposals for a given application.",
        "operationId": "ProposalIncrements_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProposalIncrements"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "PUT Proposal Increment\r\nUpdate a Proposal Increment record by ID.",
        "operationId": "ProposalIncrement_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Proposal Increment values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProposalIncrements"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "POST proposal Increment\r\nCreates an increment record for a given proposal and increment ID, as well as underlying \r\ncontribution details given in request body.",
        "operationId": "ProposalIncrement_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "List of Increments to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposalIncrements"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiables"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/increments/{incrementId}": {
      "get": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "GET Increment\r\nReturn a single Increment, identified by the given ID.",
        "operationId": "ProposalIncrements_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Guid of the requested proposal.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "Guid of the requested increment.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProposalIncrement"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "DELETE Proposal Increment\r\nDeletes an Increment record on a Proposal by id",
        "operationId": "ProposalIncrement_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the increment to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "PATCH Increment\r\nPatch an Increment by ID.",
        "operationId": "ProposalIncrement_Patch",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "ID of the proposal on which the increment is attached.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of Increment to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Increment values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchProposalIncrement"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/policies/{policyId}/increments/{incrementReference}": {
      "patch": {
        "tags": [
          "ProposalIncrements"
        ],
        "summary": "PATCH Increment by \r\nPatch an Increment by ID.",
        "operationId": "ProposalIncrement_PatchByPolicy",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "description": "Account number from the policy admin system linked to the Proposal on which the increment is attached.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incrementReference",
            "in": "path",
            "description": "Increment reference from the policy admin system linked to the Proposal on which the increment is attached..",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Increment values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchPolicyIncrement"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Proposals": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "GET Proposals\r\nReturn a list of all proposals for a given application.",
        "operationId": "Proposals_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "search.applicationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search.applicantId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adviserId",
            "in": "header",
            "description": "Retrieves a list of adviser ids from the ITR tree, retrieved adviser ids will be used to filter the response data. Only required for staff users to give adviser context.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Proposals"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Proposals"
        ],
        "summary": "POST Proposal\r\nCreate a proposal for a given applicant.",
        "operationId": "Proposal_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Proposal to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProposal"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ProposalIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Proposals/{id}": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "GET Proposal\r\nReturn a single Proposal, identified by the given ID.",
        "operationId": "Proposals_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the requested proposal.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Proposals"
        ],
        "summary": "PUT Proposal\r\nUpdate a Proposal by ID.",
        "operationId": "Proposal_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Proposal to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Proposal values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProposal"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Proposals"
        ],
        "summary": "DELETE api/proposals/id\r\nDeletes a Proposal by id",
        "operationId": "Proposals_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the Proposal to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Proposals"
        ],
        "summary": "PATCH Proposal\r\nUpdate a Proposal by ID.",
        "operationId": "Proposal_Patch",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Proposal to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Proposal values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchProposal"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/proposals/{proposalId}/state": {
      "get": {
        "tags": [
          "Proposals"
        ],
        "summary": "GET Proposal State\r\nReturn the state of a Proposal, identified by the given ID.",
        "operationId": "Proposals_GetState",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "proposalId",
            "in": "path",
            "description": "Guid of the requested proposal.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProposalState"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/{quoteId}/charges": {
      "get": {
        "tags": [
          "QuoteAdviserCharges"
        ],
        "summary": "GET Quote AdviserCharges\r\nReturn a list of all AdviserCharges records on a given Quote.",
        "operationId": "QuoteAdviserCharges_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAdviserCharges"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "QuoteAdviserCharges"
        ],
        "summary": "PUT Quote AdviserCharge\r\nUpdate a given set of charge records.",
        "operationId": "QuoteAdviserCharge_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Quote AdviserCharge values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateQuoteAdviserCharges"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "QuoteAdviserCharges"
        ],
        "summary": "POST Quote AdviserCharge\r\nCreate a set of charge records for a given quote.",
        "operationId": "QuoteAdviserCharge_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Charges to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuoteAdviserCharges"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuoteIdentifiables"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/{quoteId}/charges/{chargeId}": {
      "get": {
        "tags": [
          "QuoteAdviserCharges"
        ],
        "summary": "GET Quote AdviserCharge\r\nReturn a single AdviserCharge record, identified by the given IDs.",
        "operationId": "QuoteAdviserCharge_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "chargeId",
            "in": "path",
            "description": "ID of the AdviserCharge record to retrieve",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteAdviserCharge"
            }
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "QuoteAdviserCharges"
        ],
        "summary": "DELETE Quote AdviserCharge\r\nDeletes an AdviserCharge record on a Quote by id",
        "operationId": "QuoteAdviserCharge_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "chargeId",
            "in": "path",
            "description": "ID of the AdviserCharge record to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/QuoteHeaders/{id}": {
      "get": {
        "tags": [
          "QuoteHeaders"
        ],
        "summary": "GET Quote\r\nReturn a single Quote Header record, identified by the given ID.",
        "operationId": "QuoteHeaders_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the requested quote.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteHeader"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "QuoteHeaders"
        ],
        "summary": "PUT QuoteHeader\r\nUpdate a quote header for a given applicant.",
        "operationId": "QuoteHeader_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Quote Header to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Quote header to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateQuoteHeader"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/QuoteHeaders": {
      "post": {
        "tags": [
          "QuoteHeaders"
        ],
        "summary": "POST QuoteHeader\r\nCreate a Quote Header for a given applicant.",
        "operationId": "QuoteHeader_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Quote Header request details to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuoteHeader"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuoteHeaderIdentifiable"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/{quoteId}/increments": {
      "get": {
        "tags": [
          "QuoteIncrements"
        ],
        "summary": "GET Increments\r\nReturn a list of all proposals for a given application.",
        "operationId": "QuoteIncrements_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteIncrements"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "QuoteIncrements"
        ],
        "summary": "PUT Quote Increment\r\nUpdate a Quote Increment record by ID.",
        "operationId": "QuoteIncrement_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Quote Increment values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateQuoteIncrements"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "QuoteIncrements"
        ],
        "summary": "POST Quote Increment\r\nCreates an increment records for a given quote and increment ID, as well as underlying \r\ncontribution details given in request body.",
        "operationId": "QuoteIncrement_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Quote",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Details of Increments to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuoteIncrements"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuoteIdentifiables"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/{quoteId}/increments/{incrementId}": {
      "get": {
        "tags": [
          "QuoteIncrements"
        ],
        "summary": "GET Increment\r\nReturn a single Increment, identified by the given ID.",
        "operationId": "QuoteIncrements_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "Guid of the requested quote.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "Guid of the requested increment.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteIncrement"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "QuoteIncrements"
        ],
        "summary": "DELETE Quote Increment\r\nDeletes an Increment record on a Quote by id",
        "operationId": "QuoteIncrement_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "description": "ID of the parent Proposal",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementId",
            "in": "path",
            "description": "ID of the increment to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Quotes": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "GET Quotes\r\nReturn a list of all quotes for a given application.",
        "operationId": "Quotes_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "search.applicationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search.applicantId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adviserId",
            "in": "header",
            "description": "Retrieves a list of adviser ids from the ITR tree, retrieved adviser ids will be used to filter the response data. Only required for staff users to give adviser context.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quotes"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Quotes"
        ],
        "summary": "POST Quote\r\nCreate a quote for a given applicant.",
        "operationId": "Quote_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Quote to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateQuote"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QuoteIdentifiable"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Quotes/{id}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "GET Quote\r\nReturn a single Quote, identified by the given ID.",
        "operationId": "Quotes_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the requested quote.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quote"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Quotes"
        ],
        "summary": "PUT Quote\r\nUpdate a Quote by ID.",
        "operationId": "Quote_Update",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Quote to update.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Quote values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateQuote"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Quotes"
        ],
        "summary": "DELETE api/quotes/id\r\nDeletes a Quote by id",
        "operationId": "Quote_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guid of the Quote to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/quotes/case/{caseId}": {
      "get": {
        "tags": [
          "Quotes"
        ],
        "summary": "GET Quotes By Case",
        "operationId": "QuotesByCase_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "16 Digit Case Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteByCaseList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/taxFreeCashCalculationInputs": {
      "get": {
        "tags": [
          "TaxFreeCashCalculationInputs"
        ],
        "summary": "GET TaxFreeCashCalculationInputs\r\nReturn a the inputs needed for the Tax Free Cash Calculation, identified by the given Quote ID.",
        "operationId": "TaxFreeCashCalculationInputs_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "Guid of the requested quote.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "incrementGroupId",
            "in": "query",
            "description": "Optional - Guid of the IncrementGroup if requesting data at plan level.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaxFreeCashCalculationInputs"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Tracker": {
      "get": {
        "tags": [
          "Tracker"
        ],
        "summary": "GET TrackerEvents\r\nReturn a list of TrackerEvents for a given set of adviser IDs",
        "operationId": "TrackerEvents_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adviserId",
            "in": "header",
            "description": "Retrieves a list of adviser ids from the ITR tree, retrieved adviser ids will be used to filter the response data. Only required for staff users to give adviser context.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrackerEvents"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Tracker"
        ],
        "summary": "POST TrackerEvent\r\nWrite details of a given event to the database.",
        "operationId": "TrackerEvents_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Tracker event to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTrackerEvent"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TrackerIdentifiable"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/Tracker/{id}": {
      "get": {
        "tags": [
          "Tracker"
        ],
        "summary": "GET TrackerEvents\r\nReturn a list of TrackerEvents for a given set of adviser IDs",
        "operationId": "TrackerEvents_GetById",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Reference of the quote or Proposal to retrieve all events for.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrackerEvents"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/WithdrawalInstructions": {
      "get": {
        "tags": [
          "WithdrawalInstructions"
        ],
        "summary": "Query WithdrawalInstruction\r\nQuery Withdrawal Instructions.",
        "operationId": "WithdrawalInstructions_Get",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WithdrawalInstructions"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "WithdrawalInstructions"
        ],
        "summary": "POST WithdrawalInstruction\r\nCreate a Withdrawal Instruction.",
        "operationId": "WithdrawalInstructions_Create",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Withdrawal Instruction to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWithdrawalInstruction"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewBusinessIdentifiable"
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    },
    "/api/newBusiness/{newBusinessId}/WithdrawalInstructions/{withdrawalInstructionId}": {
      "put": {
        "tags": [
          "WithdrawalInstructions"
        ],
        "summary": "Put WithdrawalInstruction\r\nUpdate Withdrawal Instructions.",
        "operationId": "WithdrawalInstructions_Put",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "withdrawalInstructionId",
            "in": "path",
            "description": "ID of WithdrawalInstruction to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "WithdrawalInstruction values to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWithdrawalInstruction"
            }
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "WithdrawalInstructions"
        ],
        "summary": "Delete Withdrawal Instruction by Id",
        "operationId": "WithdrawalInstructions_Delete",
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "newBusinessId",
            "in": "path",
            "description": "ID for new business entity",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "withdrawalInstructionId",
            "in": "path",
            "description": "ID of WithdrawalInstruction to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "X-TransactionID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  Generated within the Integration layer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-CorrelationID",
            "in": "header",
            "description": "Non-functional and operational concern for use in troubleshooting log messages.  So the consumer of an API can provide context across multiple requests to the API layer.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "security": [
          {
            "oauth2": [
              "internal"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "ApplicantSearch": {
      "type": "object",
      "properties": {
        "Surname": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        }
      }
    },
    "Applicants": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "Applicant": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Applicant"
          }
        }
      },
      "xml": {
        "name": "Applicants",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "ItemCount": {
          "format": "int32",
          "type": "integer"
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "PageSizeMax": {
          "format": "int32",
          "type": "integer"
        }
      },
      "xml": {
        "name": "Metadata"
      }
    },
    "Applicant": {
      "required": [
        "Id",
        "FirstName",
        "Surname",
        "DateOfBirth",
        "SexType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "NINumber": {
          "type": "string"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        },
        "SexType": {
          "description": "Reference Data Type Code: SEX\r\n<br />\r\nExample Value: FEM",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "CrownEmployeeFlag": {
          "type": "boolean"
        },
        "AllowMarketingFlag": {
          "type": "boolean"
        },
        "LivesInScotlandFlag": {
          "type": "boolean"
        },
        "UKEarningFlag": {
          "type": "boolean"
        },
        "AmlConsentGiven": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        }
      },
      "xml": {
        "name": "Applicant",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "Contact": {
      "required": [
        "Id",
        "ContactType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Address": {
      "required": [
        "AddressLine1",
        "City",
        "CountryType"
      ],
      "type": "object",
      "properties": {
        "ForeignAddressFlag": {
          "type": "boolean"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        }
      }
    },
    "CreateApplicant": {
      "required": [
        "FirstName",
        "Surname",
        "DateOfBirth",
        "SexType"
      ],
      "type": "object",
      "properties": {
        "CaseId": {
          "type": "string"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "NINumber": {
          "type": "string"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        },
        "SexType": {
          "description": "Reference Data Type Code: SEX\r\n<br />\r\nExample Value: FEM",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "CrownEmployeeFlag": {
          "type": "boolean"
        },
        "AllowMarketingFlag": {
          "type": "boolean"
        },
        "LivesInScotlandFlag": {
          "type": "boolean"
        },
        "AmlConsentGiven": {
          "type": "boolean"
        },
        "UKEarningFlag": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateContact"
          }
        }
      },
      "xml": {
        "name": "CreateApplicant",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "CreateContact": {
      "required": [
        "ContactType"
      ],
      "type": "object",
      "properties": {
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "ApplicantIdentifiable": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ApplicantIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "UpdateApplicant": {
      "required": [
        "FirstName",
        "Surname",
        "DateOfBirth",
        "SexType"
      ],
      "type": "object",
      "properties": {
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value\r\n: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "NINumber": {
          "type": "string"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        },
        "SexType": {
          "description": "Reference Data Type Code: SEX\r\n<br />\r\nExample Value: FEM",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "CrownEmployeeFlag": {
          "type": "boolean"
        },
        "AllowMarketingFlag": {
          "type": "boolean"
        },
        "LivesInScotlandFlag": {
          "type": "boolean"
        },
        "AmlConsentGiven": {
          "type": "boolean"
        },
        "UKEarningFlag": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateContact"
          }
        }
      },
      "xml": {
        "name": "UpdateApplicant",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "UpdateContact": {
      "required": [
        "ContactType"
      ],
      "type": "object",
      "properties": {
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "PatchApplicant": {
      "type": "object",
      "properties": {
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "NINumber": {
          "type": "string"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        },
        "SexType": {
          "description": "Reference Data Type Code: SEX\r\n<br />\r\nExample Value: FEM",
          "type": "string"
        },
        "AmlConsentGiven": {
          "type": "boolean"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        }
      },
      "xml": {
        "name": "PatchApplicant",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "AuthorizedThirdParties": {
      "type": "object",
      "properties": {
        "AuthorizedThirdParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedThirdParty"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "AuthorizedThirdParties",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "AuthorizedThirdParty": {
      "required": [
        "Id",
        "ThirdPartyType",
        "FirstName",
        "Surname",
        "DateOfBirth",
        "Contacts"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ThirdPartyType": {
          "description": "Reference Data Type Code: A3PT\r\n<br />\r\nExample Value: LEGU",
          "type": "string"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "IsPrimaryCorrespondent": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyContact"
          }
        }
      },
      "xml": {
        "name": "AuthorizedThirdParty",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "ThirdPartyContact": {
      "required": [
        "ContactType",
        "Address"
      ],
      "type": "object",
      "properties": {
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/ThirdPartyAddress"
        }
      }
    },
    "ThirdPartyAddress": {
      "required": [
        "AddressType",
        "AddressLine1",
        "City",
        "Postcode",
        "CountryType"
      ],
      "type": "object",
      "properties": {
        "ForeignAddressFlag": {
          "type": "boolean"
        },
        "AddressType": {
          "description": "Reference Data Type Code: ADDR\r\n<br />\r\nExample Value: RESI",
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        }
      }
    },
    "CreateAuthorizedThirdParty": {
      "required": [
        "ThirdPartyType",
        "FirstName",
        "Surname",
        "DateOfBirth",
        "Contacts"
      ],
      "type": "object",
      "properties": {
        "ThirdPartyType": {
          "description": "Reference Data Type Code: A3PT\r\n<br />\r\nExample Value: LEGU",
          "type": "string"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "IsPrimaryCorrespondent": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateThirdPartyContact"
          }
        }
      },
      "xml": {
        "name": "CreateAuthorizedThirdParty",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "CreateThirdPartyContact": {
      "required": [
        "ContactType"
      ],
      "type": "object",
      "properties": {
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/CreateThirdPartyAddress"
        }
      }
    },
    "CreateThirdPartyAddress": {
      "required": [
        "AddressType",
        "AddressLine1",
        "City",
        "Postcode",
        "CountryType"
      ],
      "type": "object",
      "properties": {
        "ForeignAddressFlag": {
          "type": "boolean"
        },
        "AddressType": {
          "description": "Reference Data Type Code: ADDR\r\n<br />\r\nExample Value: RESI",
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        }
      }
    },
    "UpdateAuthorizedThirdParty": {
      "required": [
        "ThirdPartyType",
        "FirstName",
        "Surname",
        "DateOfBirth",
        "Contacts"
      ],
      "type": "object",
      "properties": {
        "ThirdPartyType": {
          "description": "Reference Data Type Code: A3PT\r\n<br />\r\nExample Value: LEGU",
          "type": "string"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "IsPrimaryCorrespondent": {
          "type": "boolean"
        },
        "Contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateThirdPartyContact"
          }
        }
      },
      "xml": {
        "name": "UpdateAuthorizedThirdParty",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/applicant/v6"
      }
    },
    "UpdateThirdPartyContact": {
      "required": [
        "ContactType"
      ],
      "type": "object",
      "properties": {
        "ContactType": {
          "description": "Reference Data Type Code: CTAC\r\n<br />\r\nExample Value: EMAL",
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/UpdateThirdPartyAddress"
        }
      }
    },
    "UpdateThirdPartyAddress": {
      "required": [
        "AddressType",
        "AddressLine1",
        "City",
        "Postcode",
        "CountryType"
      ],
      "type": "object",
      "properties": {
        "ForeignAddressFlag": {
          "type": "boolean"
        },
        "AddressType": {
          "description": "Reference Data Type Code: ADDR\r\n<br />\r\nExample Value: RESI",
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        }
      }
    },
    "BankAccounts": {
      "type": "object",
      "properties": {
        "BankAccount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "BankAccounts",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "BankAccount": {
      "required": [
        "AccountNumber",
        "SortCode",
        "AccountName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccountNumber": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BankAccount",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateBankAccount": {
      "required": [
        "AccountNumber",
        "SortCode",
        "AccountName"
      ],
      "type": "object",
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateBankAccount",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "ProposalIdentifiable": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CaseId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ProposalIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateBankAccount": {
      "required": [
        "AccountNumber",
        "SortCode",
        "AccountName"
      ],
      "type": "object",
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateBankAccount",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "BeneficiaryDetails": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Notes": {
          "type": "string"
        },
        "DiscretionaryPaymentType": {
          "description": "Reference Data Type Code: DPYT\r\n<br />\r\nExample Value: RLDI",
          "type": "string"
        },
        "Beneficiaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Beneficiary"
          }
        }
      },
      "xml": {
        "name": "BeneficiaryDetails",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "Beneficiary": {
      "required": [
        "Id",
        "Surname",
        "AllocationPercentage"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "AllocationPercentage": {
          "type": "number"
        },
        "RelationshipType": {
          "description": "Reference Data Type Code: BREL\r\n<br />\r\nExample Value: SPOU",
          "type": "string"
        },
        "BeneficiaryType": {
          "description": "Reference Data Type Code: BNTY\r\n<br />\r\nExample Value: CHAR",
          "type": "string"
        }
      }
    },
    "UpdateBeneficiaryDetails": {
      "required": [
        "DiscretionaryPaymentType"
      ],
      "type": "object",
      "properties": {
        "Notes": {
          "type": "string"
        },
        "DiscretionaryPaymentType": {
          "description": "Reference Data Type Code: DPYT\r\n<br />\r\nExample Value: RLDI",
          "type": "string"
        },
        "Beneficiaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateBeneficiary"
          }
        }
      },
      "xml": {
        "name": "UpdateBeneficiaryDetails",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateBeneficiary": {
      "required": [
        "Surname",
        "AllocationPercentage"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "AllocationPercentage": {
          "type": "number"
        },
        "RelationshipType": {
          "description": "Reference Data Type Code: BREL\r\n<br />\r\nExample Value: SPOU",
          "type": "string"
        },
        "BeneficiaryType": {
          "description": "Reference Data Type Code: BNTY\r\n<br />\r\nExample Value: CHAR",
          "type": "string"
        }
      }
    },
    "FlexibleAccessList": {
      "type": "object",
      "properties": {
        "FlexibleAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlexibleAccess"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "FlexibleAccessList",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "FlexibleAccess": {
      "required": [
        "Id",
        "NewBusinessId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OverrideCharge": {
          "type": "boolean"
        },
        "ExistingPlanNumber": {
          "type": "string"
        },
        "GuidanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceTargetType": {
          "description": "Reference Data Type Code: DTTY\r\n<br />\r\nExample Value: DGIN",
          "type": "string"
        },
        "ClientHasExistingPlanForTwelveMonthsFlag": {
          "type": "boolean"
        },
        "ClientHasIncomeReleasePlanFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FlexibleAccess",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "UpdateFlexibleAccess": {
      "type": "object",
      "properties": {
        "OverrideCharge": {
          "type": "boolean"
        },
        "ExistingPlanNumber": {
          "type": "string"
        },
        "GuidanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceTargetType": {
          "description": "Reference Data Type Code: DTTY\r\n<br />\r\nExample Value: DGIN",
          "type": "string"
        },
        "ClientHasExistingPlanForTwelveMonthsFlag": {
          "type": "boolean"
        },
        "ClientHasIncomeReleasePlanFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateFlexibleAccess",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "CreateFlexibleAccessInstruction": {
      "required": [
        "FlexibleAccessType",
        "IncrementGroupId",
        "TakeFullTaxFreeCash",
        "TakePartialTaxFreeCash",
        "TakeTaxFreeRegularIncome",
        "TakePartialTaxableCash",
        "TakeTaxableRegularIncome",
        "UseIncomeTap",
        "IsMaxGad"
      ],
      "type": "object",
      "properties": {
        "FlexibleAccessType": {
          "description": "Reference Data Type Code: PBRT\r\n<br />\r\nExample Value: CAPP",
          "type": "string"
        },
        "IncrementGroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TakeFullTaxFreeCash": {
          "type": "boolean"
        },
        "TakePartialTaxFreeCash": {
          "type": "boolean"
        },
        "PartialTaxFreeCashAmount": {
          "type": "number"
        },
        "TakeTaxFreeRegularIncome": {
          "type": "boolean"
        },
        "TaxFreeRegularIncomeAmount": {
          "type": "number"
        },
        "TakePartialTaxableCash": {
          "type": "boolean"
        },
        "PartialTaxableCashAmount": {
          "type": "number"
        },
        "TakeTaxableRegularIncome": {
          "type": "boolean"
        },
        "TaxableRegularIncomeAmount": {
          "type": "number"
        },
        "RegularIncomePaymentFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "UseIncomeTap": {
          "type": "boolean"
        },
        "IncomeTapNumberOfMonths": {
          "format": "int32",
          "type": "integer"
        },
        "IncomeTapReviewFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "IsMaxGad": {
          "type": "boolean"
        },
        "PartialGadAmount": {
          "type": "number"
        },
        "PartialGadPercentage": {
          "type": "number"
        },
        "FullyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartiallyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartialCrystallisationAmountWithNoTaxFreeCash": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TaxFreeIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "TaxableIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "FullCrystallisationOfBlockTransferValue": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateFlexibleAccessInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "NewBusinessIdentifiable": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "NewBusinessIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "FlexibleAccessInstructions": {
      "type": "object",
      "properties": {
        "FlexibleAccessInstruction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlexibleAccessInstruction"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "FlexibleAccessInstructions",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "FlexibleAccessInstruction": {
      "required": [
        "Id",
        "FlexibleAccessType",
        "IncrementGroup",
        "TakeFullTaxFreeCash",
        "TakePartialTaxFreeCash",
        "TakeTaxFreeRegularIncome",
        "TakePartialTaxableCash",
        "TakeTaxableRegularIncome",
        "UseIncomeTap",
        "IsMaxGad"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FlexibleAccessType": {
          "description": "Reference Data Type Code: PBRT\r\n<br />\r\nExample Value: CAPP",
          "type": "string"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TakeFullTaxFreeCash": {
          "type": "boolean"
        },
        "TakePartialTaxFreeCash": {
          "type": "boolean"
        },
        "PartialTaxFreeCashAmount": {
          "type": "number"
        },
        "TakeTaxFreeRegularIncome": {
          "type": "boolean"
        },
        "TaxFreeRegularIncomeAmount": {
          "type": "number"
        },
        "TakePartialTaxableCash": {
          "type": "boolean"
        },
        "PartialTaxableCashAmount": {
          "type": "number"
        },
        "TakeTaxableRegularIncome": {
          "type": "boolean"
        },
        "TaxableRegularIncomeAmount": {
          "type": "number"
        },
        "RegularIncomePaymentFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "UseIncomeTap": {
          "type": "boolean"
        },
        "IncomeTapNumberOfMonths": {
          "format": "int32",
          "type": "integer"
        },
        "IncomeTapReviewFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "IsMaxGad": {
          "type": "boolean"
        },
        "PartialGadAmount": {
          "type": "number"
        },
        "PartialGadPercentage": {
          "type": "number"
        },
        "FullyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartiallyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartialCrystallisationAmountWithNoTaxFreeCash": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TaxFreeIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "TaxableIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "TaxFreeRegularIncomeAmountPerFrequency": {
          "type": "number"
        },
        "TaxableRegularIncomeAmountPerFrequency": {
          "type": "number"
        },
        "FullCrystallisationOfBlockTransferValue": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "FlexibleAccessInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "WithdrawalFunds": {
      "type": "object",
      "properties": {
        "WithdrawalFund": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WithdrawalFund"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "WithdrawalFunds",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "WithdrawalFund": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "WithdrawalInstructionType": {
          "type": "string",
          "description": "Reference Data Type Code: WITY\r\n<br />\r\nExample Value: WIAF | WISF"
        },
        "WithdrawalType": {
          "type": "string",
          "description": "Reference Data Type Code: WDRL\r\n<br />\r\nExample Value:"
        },
        "FundId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "CreateWithdrawalFund": {
      "type": "object",
      "properties": {
        "WithdrawalInstructionType": {
          "type": "string",
          "description": "Reference Data Type Code: WITY\r\n<br />\r\nExample Value: WIAF | WISF"
        },
        "WithdrawalType": {
          "type": "string",
          "description": "Reference Data Type Code: WDRL\r\n<br />\r\nExample Value:"
        },
        "FundId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "UpdateWithdrawalFund": {
      "type": "object",
      "properties": {
        "WithdrawalInstructionType": {
          "type": "string",
          "description": "Reference Data Type Code: WITY\r\n<br />\r\nExample Value: WIAF | WISF"
        },
        "WithdrawalType": {
          "type": "string",
          "description": "Reference Data Type Code: WDRL\r\n<br />\r\nExample Value:"
        },
        "FundId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "WithdrawalFundIdentifiable": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "IncrementGroup": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementGroupType": {
          "description": "Reference Data Type Code: IGTY\r\n<br />\r\nExample Value: PLNN",
          "type": "string"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "PlanId": {
          "description": "SMS Generated PlanId",
          "type": "string"
        }
      }
    },
    "UpdateFlexibleAccessInstruction": {
      "required": [
        "FlexibleAccessType",
        "TakeFullTaxFreeCash",
        "TakePartialTaxFreeCash",
        "TakeTaxFreeRegularIncome",
        "TakePartialTaxableCash",
        "TakeTaxableRegularIncome",
        "UseIncomeTap",
        "IsMaxGad"
      ],
      "type": "object",
      "properties": {
        "FlexibleAccessType": {
          "description": "Reference Data Type Code: PBRT\r\n<br />\r\nExample Value: CAPP",
          "type": "string"
        },
        "TakeFullTaxFreeCash": {
          "type": "boolean"
        },
        "TakePartialTaxFreeCash": {
          "type": "boolean"
        },
        "PartialTaxFreeCashAmount": {
          "type": "number"
        },
        "TakeTaxFreeRegularIncome": {
          "type": "boolean"
        },
        "TaxFreeRegularIncomeAmount": {
          "type": "number"
        },
        "TakePartialTaxableCash": {
          "type": "boolean"
        },
        "PartialTaxableCashAmount": {
          "type": "number"
        },
        "TakeTaxableRegularIncome": {
          "type": "boolean"
        },
        "TaxableRegularIncomeAmount": {
          "type": "number"
        },
        "RegularIncomePaymentFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "UseIncomeTap": {
          "type": "boolean"
        },
        "IncomeTapNumberOfMonths": {
          "format": "int32",
          "type": "integer"
        },
        "IncomeTapReviewFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "IsMaxGad": {
          "type": "boolean"
        },
        "PartialGadAmount": {
          "type": "number"
        },
        "PartialGadPercentage": {
          "type": "number"
        },
        "FullyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartiallyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartialCrystallisationAmountWithNoTaxFreeCash": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TaxFreeIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "TaxableIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "FullCrystallisationOfBlockTransferValue": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateFlexibleAccessInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "IllustrationStructure": {
      "required": [
        "Id",
        "Application",
        "ProductType",
        "AdviserId",
        "StartDate",
        "QuoteStatusType",
        "NewBusinessType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Application": {
          "$ref": "#/definitions/IllustrationStructureApplication"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "TargetAgeAboveTaxReliefThresholdFlag": {
          "type": "boolean"
        },
        "TargetAgeCapturedFlag": {
          "type": "boolean"
        },
        "QuoteStatusType": {
          "description": "Reference Data Type Code: QSTA\r\n<br />\r\nExample Value: INCO",
          "type": "string"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "InflationAdjustedQuoteFlag": {
          "type": "boolean"
        },
        "StandardGrowthRateFlag": {
          "type": "boolean"
        },
        "IncludeLifetimeAllowanceCalculationFlag": {
          "type": "boolean"
        },
        "IllustrationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IllustrationGroup"
          }
        },
        "IncrementTotals": {
          "$ref": "#/definitions/IncrementTotals"
        },
        "AdviserCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessAdviserCharge"
          }
        },
        "IllustrationFileName": {
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/LifetimeAllowance"
        }
      },
      "xml": {
        "name": "IllustrationStructure",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "IllustrationStructureApplication": {
      "required": [
        "Reference",
        "Applicant"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reference": {
          "type": "string"
        },
        "Applicant": {
          "$ref": "#/definitions/IllustrationStructureApplicant"
        }
      }
    },
    "IllustrationGroup": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IllustrationGroupIncrements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IllustrationGroupIncrement"
          }
        },
        "FlexibleAccessInstructions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IllustrationGroupFlexibleAccessInstruction"
          }
        },
        "FlexibleAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IllustrationGroupFlexibleAccess"
          }
        }
      }
    },
    "IncrementTotals": {
      "type": "object",
      "properties": {
        "TotalGrossSingleContributionAmount": {
          "type": "number"
        },
        "TotalGrossRegularContributionAmount": {
          "type": "number"
        },
        "ClientRegularContributionTaxReliefAmount": {
          "type": "number"
        },
        "ClientNetRegularContributionAmount": {
          "type": "number"
        },
        "ClientSingleContributionTaxReliefAmount": {
          "type": "number"
        },
        "ClientNetSingleContributionAmount": {
          "type": "number"
        },
        "MaximumTaxFreeCashAmount": {
          "type": "number"
        }
      }
    },
    "NewBusinessAdviserCharge": {
      "required": [
        "Id",
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      }
    },
    "LifetimeAllowance": {
      "type": "object",
      "properties": {
        "LifetimeAllowanceUsedPercentage": {
          "type": "number"
        },
        "LifetimeAllowanceUsedDifference": {
          "type": "number"
        },
        "LifetimeAllowanceProtection": {
          "$ref": "#/definitions/LifetimeAllowanceProtection"
        }
      }
    },
    "IllustrationStructureApplicant": {
      "required": [
        "Id",
        "FirstName",
        "Surname",
        "DateOfBirth",
        "SexType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TitleType": {
          "description": "Reference Data Type Code: TITL\r\n<br />\r\nExample Value: MRS",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "NINumber": {
          "type": "string"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        },
        "SexType": {
          "description": "Reference Data Type Code: SEX\r\n<br />\r\nExample Value: FEM",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "CrownEmployeeFlag": {
          "type": "boolean"
        },
        "AllowMarketingFlag": {
          "type": "boolean"
        },
        "UKEarningFlag": {
          "type": "boolean"
        }
      }
    },
    "IllustrationGroupIncrement": {
      "required": [
        "Id",
        "NewBusinessId",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "Transfer": {
          "$ref": "#/definitions/QuoteTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/IllustrationGroupContribution"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "PlanId": {
          "type": "string",
          "description": "Reference to an existing PlanId for Add Change Increments\""
        }
      }
    },
    "IllustrationGroupFlexibleAccessInstruction": {
      "required": [
        "Id",
        "FlexibleAccessType",
        "IncrementGroup",
        "TakeFullTaxFreeCash",
        "TakePartialTaxFreeCash",
        "TakeTaxFreeRegularIncome",
        "TakePartialTaxableCash",
        "TakeTaxableRegularIncome",
        "UseIncomeTap",
        "IsMaxGad"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FlexibleAccessType": {
          "description": "Reference Data Type Code: PBRT\r\n<br />\r\nExample Value: CAPP",
          "type": "string"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TakeFullTaxFreeCash": {
          "type": "boolean"
        },
        "TakePartialTaxFreeCash": {
          "type": "boolean"
        },
        "PartialTaxFreeCashAmount": {
          "type": "number"
        },
        "TakeTaxFreeRegularIncome": {
          "type": "boolean"
        },
        "TaxFreeRegularIncomeAmount": {
          "type": "number"
        },
        "TakePartialTaxableCash": {
          "type": "boolean"
        },
        "PartialTaxableCashAmount": {
          "type": "number"
        },
        "TakeTaxableRegularIncome": {
          "type": "boolean"
        },
        "TaxableRegularIncomeAmount": {
          "type": "number"
        },
        "RegularIncomePaymentFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "UseIncomeTap": {
          "type": "boolean"
        },
        "IncomeTapNumberOfMonths": {
          "format": "int32",
          "type": "integer"
        },
        "IncomeTapReviewFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "IsMaxGad": {
          "type": "boolean"
        },
        "PartialGadAmount": {
          "type": "number"
        },
        "PartialGadPercentage": {
          "type": "number"
        },
        "FullyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartiallyCrystalliseSavingsWithNoTaxFreeCash": {
          "type": "boolean"
        },
        "PartialCrystallisationAmountWithNoTaxFreeCash": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TaxFreeIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "TaxableIncomeActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: STRT",
          "type": "string"
        },
        "FullCrystallisationOfBlockTransferValue": {
          "type": "boolean"
        }
      }
    },
    "IllustrationGroupFlexibleAccess": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OverrideCharge": {
          "type": "boolean"
        },
        "GuidanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceServiceUsed": {
          "type": "boolean"
        },
        "DrawdownGovernanceTargetType": {
          "description": "Reference Data Type Code: DTTY\r\n<br />\r\nExample Value: DGIN",
          "type": "string"
        },
        "ClientHasExistingPlanForTwelveMonthsFlag": {
          "type": "boolean"
        },
        "ClientHasIncomeReleasePlanFlag": {
          "type": "boolean"
        }
      }
    },
    "LifetimeAllowanceProtection": {
      "type": "object",
      "properties": {
        "ProtectionType": {
          "description": "Reference Data Type Code: PRTP\r\n<br />\r\nExample Value: PRIM",
          "type": "string"
        },
        "PercentageOfProtectedTaxFreeCash": {
          "type": "number"
        },
        "ProtectionAmount": {
          "type": "number"
        },
        "ProtectionFactor": {
          "type": "number"
        }
      }
    },
    "QuoteTransfer": {
      "required": [
        "Id",
        "TransferAmount"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TransferAmount": {
          "type": "number"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: TDRW\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/IncomeDrawdown"
        },
        "AmountOriginallyCrystallised": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        }
      }
    },
    "IllustrationGroupContribution": {
      "required": [
        "Id",
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ContributionValue": {
          "$ref": "#/definitions/ContributionValue"
        }
      }
    },
    "IncomeDrawdown": {
      "required": [
        "ReviewDate"
      ],
      "type": "object",
      "properties": {
        "ReviewDate": {
          "format": "date",
          "type": "string"
        },
        "MaxGadAmount": {
          "type": "number"
        },
        "IncomeTaken": {
          "type": "number"
        },
        "NextReviewDate": {
          "format": "date",
          "type": "string"
        },
        "RemainingIncomeForCurrentGadYear": {
          "type": "number"
        }
      }
    },
    "ProtectedTaxFreeCashModel": {
      "type": "object",
      "properties": {
        "ProtectedTaxFreeCashFlag": {
          "type": "boolean"
        },
        "TotalPartialTransfer": {
          "type": "number"
        },
        "ValueOfRetirementOnApril": {
          "type": "number"
        },
        "ProtectedTaxFreeValueOnApril": {
          "type": "number"
        },
        "AnyPartialTransferFlag": {
          "type": "boolean"
        }
      }
    },
    "ContributionValue": {
      "type": "object",
      "properties": {
        "ContributionType": {
          "description": "Reference Data Type Code: COBT\r\n<br />\r\nExample Value: PERC",
          "type": "string"
        },
        "ContributorType": {
          "description": "Reference Data Type Code: CNTB\r\n<br />\r\nExample Value: MPOS",
          "type": "string"
        },
        "MonetaryAmount": {
          "type": "number"
        },
        "Percentage": {
          "type": "number"
        },
        "EmploymentStatusType": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        }
      }
    },
    "NewProviders": {
      "type": "object",
      "properties": {
        "NewProvider": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewProvider"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "NewProviders",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "NewProvider": {
      "required": [
        "Id",
        "Name",
        "Address"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        },
        "SchemeName": {
          "type": "string"
        },
        "ContactPhoneNumber": {
          "type": "string"
        },
        "ContactEmailAddress": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      },
      "xml": {
        "name": "NewProvider",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateNewProvider": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "SchemeName": {
          "type": "string"
        },
        "ContactPhoneNumber": {
          "type": "string"
        },
        "ContactEmailAddress": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      },
      "xml": {
        "name": "CreateNewProvider",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateNewProvider": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "SchemeName": {
          "type": "string"
        },
        "ContactPhoneNumber": {
          "type": "string"
        },
        "ContactEmailAddress": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        }
      },
      "xml": {
        "name": "UpdateNewProvider",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "Payer": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayerType": {
          "description": "Reference Data Type Code: PYRT\r\n<br />\r\nExample Value: INDI",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/PayerAddress"
        },
        "ApplicantRelationshipType": {
          "description": "Reference Data Type Code: RLTP\r\n<br />\r\nExample Value: DIRE",
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: ADD",
          "type": "string"
        },
        "ExistingContributorId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Company": {
          "$ref": "#/definitions/CompanyInfo"
        },
        "BankAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessBankAccount"
          }
        }
      },
      "xml": {
        "name": "Payer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "PayerAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "CompanyInfo": {
      "required": [
        "CompanyType",
        "RegisteredAddress",
        "NatureOfBusinessType"
      ],
      "type": "object",
      "properties": {
        "CompanyId": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CompanyType": {
          "description": "Reference Data Type Code: CMTP\r\n<br />\r\nExample Value: SLTR",
          "type": "string"
        },
        "RegisteredAddress": {
          "$ref": "#/definitions/Address"
        },
        "NatureOfBusinessType": {
          "description": "Reference Data Type Code: NTBU\r\n<br />\r\nExample Value: ARMS",
          "type": "string"
        },
        "OtherNatureOfBusinessType": {
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "VATNumber": {
          "type": "string"
        },
        "RegulatorName": {
          "type": "string"
        },
        "PrincipalPlaceOfBusiness": {
          "type": "string"
        },
        "DateOfIncorporation": {
          "format": "date",
          "type": "string"
        },
        "CountryOfJurisdiction": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        },
        "CompanyBeneficialOwners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyBeneficialOwner"
          },
          "xml": {
            "name": "CompanyBeneficialOwners",
            "attribute": false
          }
        }
      }
    },
    "NewBusinessBankAccount": {
      "required": [
        "AccountNumber",
        "SortCode",
        "AccountName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AccountNumber": {
          "type": "string"
        },
        "SortCode": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        }
      }
    },
    "CompanyBeneficialOwner": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "SharePercentage": {
          "type": "number"
        },
        "Role": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "BeneficialOwnerId": {
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "CurrentHomeAddress": {
          "$ref": "#/definitions/Address"
        },
        "PreviousHomeAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "CreatePayer": {
      "required": [
        "Surname"
      ],
      "type": "object",
      "properties": {
        "PayerType": {
          "description": "Reference Data Type Code: PYRT\r\n<br />\r\nExample Value: INDI",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "ApplicantRelationshipType": {
          "description": "Reference Data Type Code: RLTP\r\n<br />\r\nExample Value: DIRE",
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: ADD",
          "type": "string"
        },
        "ExistingContributorId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Company": {
          "$ref": "#/definitions/CreateCompanyInfo"
        },
        "Address": {
          "$ref": "#/definitions/CreatePayerAddress"
        }
      },
      "xml": {
        "name": "CreatePayer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateCompanyInfo": {
      "required": [
        "CompanyType",
        "RegisteredAddress",
        "NatureOfBusinessType"
      ],
      "type": "object",
      "properties": {
        "CompanyName": {
          "type": "string"
        },
        "CompanyType": {
          "description": "Reference Data Type Code: CMTP\r\n<br />\r\nExample Value: SLTR",
          "type": "string"
        },
        "RegisteredAddress": {
          "$ref": "#/definitions/Address"
        },
        "NatureOfBusinessType": {
          "description": "Reference Data Type Code: NTBU\r\n<br />\r\nExample Value: ARMS",
          "type": "string"
        },
        "OtherNatureOfBusinessType": {
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "VATNumber": {
          "type": "string"
        },
        "RegulatorName": {
          "type": "string"
        },
        "PrincipalPlaceOfBusiness": {
          "type": "string"
        },
        "DateOfIncorporation": {
          "format": "date",
          "type": "string"
        },
        "CountryOfJurisdiction": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        },
        "CompanyBeneficialOwners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateCompanyBeneficialOwner"
          },
          "xml": {
            "name": "CompanyBeneficialOwner",
            "attribute": false
          }
        }
      }
    },
    "CreatePayerAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "CreateCompanyBeneficialOwner": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "SharePercentage": {
          "type": "number"
        },
        "Role": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "BeneficialOwnerId": {
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "CurrentHomeAddress": {
          "$ref": "#/definitions/Address"
        },
        "PreviousHomeAddress": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "UpdatePayer": {
      "required": [
        "Surname"
      ],
      "type": "object",
      "properties": {
        "PayerType": {
          "description": "Reference Data Type Code: PYRT\r\n<br />\r\nExample Value: INDI",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: ADD",
          "type": "string"
        },
        "ExistingContributorId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Address": {
          "$ref": "#/definitions/UpdatePayerAddress"
        },
        "ApplicantRelationshipType": {
          "description": "Reference Data Type Code: RLTP\r\n<br />\r\nExample Value: DIRE",
          "type": "string"
        },
        "Company": {
          "$ref": "#/definitions/CompanyInfo"
        }
      },
      "xml": {
        "name": "UpdatePayer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdatePayerAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryType": {
          "description": "Reference Data Type Code: CTRY\r\n<br />\r\nExample Value: UK",
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "PlanStructure": {
      "required": [
        "NewBusinessId",
        "Plan"
      ],
      "type": "object",
      "properties": {
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Plan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Plan"
          }
        }
      },
      "xml": {
        "name": "PlanStructure",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "Increments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IncrementHref"
          }
        },
        "PlanNumber": {
          "type": "string"
        },
        "IncrementGroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "Plan",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "IncrementHref": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "type": "string"
        },
        "IncrementReference": {
          "type": "string"
        },
        "IncomeDrawdownType": {
          "type": "string"
        }
      }
    },
    "CreateProposalAdviserCharges": {
      "type": "object",
      "properties": {
        "CreateProposalAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateProposalAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "CreateProposalAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateProposalAdviserCharge": {
      "required": [
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      }
    },
    "ProposalIdentifiables": {
      "type": "object",
      "properties": {
        "ProposalIdentifiable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalIdentifiable"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "ProposalIdentifiables",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateProposalAdviserCharges": {
      "type": "object",
      "properties": {
        "UpdateProposalAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateProposalAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "UpdateProposalAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateProposalAdviserCharge": {
      "required": [
        "Id",
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateProposalAdviserCharge",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "ProposalAdviserCharges": {
      "type": "object",
      "properties": {
        "ProposalAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProposalAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "ProposalAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "ProposalAdviserCharge": {
      "required": [
        "Id",
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "ProposalAdviserCharge",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateProposalIncrements": {
      "type": "object",
      "properties": {
        "CreateProposalIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateProposalIncrement"
          }
        },
        "GroupIncrementsFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateProposalIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateProposalIncrement": {
      "required": [
        "IncrementType"
      ],
      "type": "object",
      "properties": {
        "CaseId": {
          "type": "string"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "IncrementReference": {
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/CreateProposalTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/CreateIncrementContribution"
        },
        "IncrementGroupMember": {
          "$ref": "#/definitions/CreateIncrementGroupMember"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "ExistingPlan": {
          "$ref": "#/definitions/ExistingPlan"
        }
      },
      "xml": {
        "name": "CreateProposalIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateProposalTransfer": {
      "required": [
        "BlockTransferFlag",
        "EstimatedValue",
        "FullTransferFlag",
        "ProtectedPensionAgeFlag",
        "InsistentClientFlag",
        "TransferType",
        "IncomeDrawdownType"
      ],
      "type": "object",
      "properties": {
        "ActualValue": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ConfirmEarliestEntitledRetirementAgeFlag": {
          "type": "boolean"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "EarmarkingOrderFlag": {
          "type": "boolean"
        },
        "EstimatedValue": {
          "type": "number"
        },
        "FullTransferFlag": {
          "type": "boolean"
        },
        "GuaranteeDate": {
          "format": "date",
          "type": "string"
        },
        "PensionSharingOrderFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "InsistentClientFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "TransferType": {
          "description": "Reference Data Type Code: PSCT\r\n<br />\r\nExample Value: DEFC",
          "type": "string"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "ValueCrystallisedFlag": {
          "type": "boolean"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: IGTY\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/CreateIncomeDrawdown"
        },
        "SubscriptionType": {
          "description": "Reference Data Type Code: SBTY\r\n<br />\r\nExample Value: CURR",
          "type": "string"
        },
        "EstimatedCurrentYearContributionValue": {
          "type": "number"
        },
        "ActualCurrentYearContributionValue": {
          "type": "number"
        }
      }
    },
    "CreateIncrementContribution": {
      "required": [
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayerId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "EstimatedPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "FirstPaymentAmount": {
          "type": "number"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "PaymentMethodType": {
          "description": "Reference Data Type Code: PYMT\r\n<br />\r\nExample Value: DD",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ChangeRPExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateContributionValue"
          }
        }
      }
    },
    "CreateIncrementGroupMember": {
      "type": "object",
      "properties": {
        "IncrementGroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ExistingPlan": {
      "type": "object",
      "properties": {
        "HasActiveAccumulationFlag": {
          "type": "boolean"
        },
        "LivePlanId": {
          "type": "string",
          "description": "Reference to an existing PlanId for Add Change increment scenarios"
        },
        "IsCorePlan": {
          "type": "boolean"
        },
        "PayerType": {
          "description": "Reference Data Type Code: PYRT\r\n<br />\r\nExample Value: INDI",
          "type": "string"
        }
      }
    },
    "CreateIncomeDrawdown": {
      "required": [
        "ReviewDate"
      ],
      "type": "object",
      "properties": {
        "ReviewDate": {
          "format": "date",
          "type": "string"
        },
        "MaxGadAmount": {
          "type": "number"
        },
        "IncomeTaken": {
          "type": "number"
        }
      }
    },
    "CreateContributionValue": {
      "type": "object",
      "properties": {
        "ContributionType": {
          "description": "Reference Data Type Code: COBT\r\n<br />\r\nExample Value: PERC",
          "type": "string"
        },
        "ContributorType": {
          "description": "Reference Data Type Code: CNTB\r\n<br />\r\nExample Value: MPOS",
          "type": "string"
        },
        "MonetaryAmount": {
          "type": "number"
        },
        "Percentage": {
          "type": "number"
        },
        "EmploymentStatusType": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateContributionValue",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateProposalIncrements": {
      "type": "object",
      "properties": {
        "ProposalIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateProposalIncrement"
          }
        }
      },
      "xml": {
        "name": "UpdateProposalIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateProposalIncrement": {
      "required": [
        "Id",
        "IncrementType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/UpdateProposalTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/UpdateIncrementContribution"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateProposalIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateProposalTransfer": {
      "required": [
        "BlockTransferFlag",
        "EstimatedValue",
        "FullTransferFlag",
        "InsistentClientFlag",
        "ProtectedPensionAgeFlag",
        "TransferType",
        "IncomeDrawdownType"
      ],
      "type": "object",
      "properties": {
        "ActualValue": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ConfirmEarliestEntitledRetirementAgeFlag": {
          "type": "boolean"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "EarmarkingOrderFlag": {
          "type": "boolean"
        },
        "EstimatedValue": {
          "type": "number"
        },
        "FullTransferFlag": {
          "type": "boolean"
        },
        "GuaranteeDate": {
          "format": "date",
          "type": "string"
        },
        "PensionSharingOrderFlag": {
          "type": "boolean"
        },
        "InsistentClientFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "TransferType": {
          "description": "Reference Data Type Code: PSCT\r\n<br />\r\nExample Value: DEFC",
          "type": "string"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "ValueCrystallisedFlag": {
          "type": "boolean"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: TDRW\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/UpdateIncomeDrawdown"
        },
        "SubscriptionType": {
          "description": "Reference Data Type Code: SBTY\r\n<br />\r\nExample Value: CURR",
          "type": "string"
        },
        "EstimatedCurrentYearContributionValue": {
          "type": "number"
        },
        "ActualCurrentYearContributionValue": {
          "type": "number"
        }
      },
      "xml": {
        "name": "UpdateProposalTransfer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateIncrementContribution": {
      "required": [
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayerId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "EstimatedPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "FirstPaymentAmount": {
          "type": "number"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "PaymentMethodType": {
          "description": "Reference Data Type Code: PYMT\r\n<br />\r\nExample Value: DD",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ChangeRPExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateContributionValue"
          }
        }
      },
      "xml": {
        "name": "UpdateIncrementContribution",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateIncomeDrawdown": {
      "required": [
        "ReviewDate"
      ],
      "type": "object",
      "properties": {
        "ReviewDate": {
          "format": "date",
          "type": "string"
        },
        "MaxGadAmount": {
          "type": "number"
        },
        "IncomeTaken": {
          "type": "number"
        }
      }
    },
    "UpdateContributionValue": {
      "type": "object",
      "properties": {
        "ContributionType": {
          "description": "Reference Data Type Code: COBT\r\n<br />\r\nExample Value: PERC",
          "type": "string"
        },
        "ContributorType": {
          "description": "Reference Data Type Code: CNTB\r\n<br />\r\nExample Value: MPOS",
          "type": "string"
        },
        "MonetaryAmount": {
          "type": "number"
        },
        "Percentage": {
          "type": "number"
        },
        "EmploymentStatus": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        }
      }
    },
    "ProposalIncrements": {
      "type": "object",
      "properties": {
        "ProposalIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessProposalIncrement"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "ProposalIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "NewBusinessProposalIncrement": {
      "required": [
        "Id",
        "NewBusinessId",
        "IncrementType",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "GroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/ProposalTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/IncrementContribution"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "ExistingPlan": {
          "$ref": "#/definitions/ExistingPlan"
        }
      }
    },
    "ProposalTransfer": {
      "required": [
        "Id",
        "BlockTransferFlag",
        "EstimatedValue",
        "FullTransferFlag",
        "ProtectedPensionAgeFlag",
        "TransferType",
        "InsistentClientFlag"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ActualValue": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ConfirmEarliestEntitledRetirementAgeFlag": {
          "type": "boolean"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "EarmarkingOrderFlag": {
          "type": "boolean"
        },
        "EstimatedValue": {
          "type": "number"
        },
        "FullTransferFlag": {
          "type": "boolean"
        },
        "GuaranteeDate": {
          "format": "date",
          "type": "string"
        },
        "PensionSharingOrderFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "TransferType": {
          "description": "Reference Data Type Code: PSCT\r\n<br />\r\nExample Value: DEFC",
          "type": "string"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "ValueCrystallisedFlag": {
          "type": "boolean"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        },
        "NewProvider": {
          "$ref": "#/definitions/NewProvider"
        },
        "InsistentClientFlag": {
          "type": "boolean"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: TDRW\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/IncomeDrawdown"
        },
        "SubscriptionType": {
          "description": "Reference Data Type Code: SBTY\r\n<br />\r\nExample Value: CURR",
          "type": "string"
        },
        "EstimatedCurrentYearContributionValue": {
          "type": "number"
        },
        "ActualCurrentYearContributionValue": {
          "type": "number"
        }
      }
    },
    "IncrementContribution": {
      "required": [
        "Id",
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayerId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "EstimatedPaymentDate": {
          "format": "date",
          "type": "string"
        },
        "FirstPaymentAmount": {
          "type": "number"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "PaymentMethodType": {
          "description": "Reference Data Type Code: PYMT\r\n<br />\r\nExample Value: DD",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ChangeRPExecutionDate": {
          "format": "date",
          "type": "string"
        },
        "BankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "Payer": {
          "$ref": "#/definitions/Contributor"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionValue"
          }
        }
      }
    },
    "Contributor": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayerType": {
          "description": "Reference Data Type Code: PYRT\r\n<br />\r\nExample Value: INDI",
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "RelationshipType": {
          "description": "Reference Data Type Code: RLTP\r\n<br />\r\nExample Value: DIRE",
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: ADD",
          "type": "string"
        },
        "ExistingContributorId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Company": {
          "$ref": "#/definitions/CompanyInfo"
        },
        "Address": {
          "$ref": "#/definitions/ContributorAddress"
        }
      }
    },
    "ContributorAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "AddressLine3": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "ProposalIncrement": {
      "required": [
        "Id",
        "NewBusinessId",
        "IncrementType",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "GroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/ProposalTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/IncrementContribution"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        }
      },
      "xml": {
        "name": "ProposalIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "PatchProposalIncrement": {
      "type": "object",
      "properties": {
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PatchProposalIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "PatchPolicyIncrement": {
      "type": "object",
      "properties": {
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/PatchProposalTransfer"
        }
      },
      "xml": {
        "name": "PatchPolicyIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "PatchProposalTransfer": {
      "type": "object",
      "properties": {
        "ActualValue": {
          "type": "number"
        },
        "EstimatedValue": {
          "type": "number"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PatchProposalTransfer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "ProposalSearch": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Proposals": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "Proposal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Proposal"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "Proposals",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "Proposal": {
      "required": [
        "Id",
        "Application",
        "ProductType",
        "StartDate",
        "ProposalStatusType",
        "AdviserId",
        "NewBusinessType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Application": {
          "$ref": "#/definitions/Application"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAgeAboveTaxReliefThresholdFlag": {
          "type": "boolean"
        },
        "TargetAgeCapturedFlag": {
          "type": "boolean"
        },
        "ProposalStatus": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "ProposalStatusType": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "CaseId": {
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "ApplicationSubmissionDate": {
          "format": "date",
          "type": "string"
        },
        "Increments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessProposalIncrement"
          }
        },
        "IncrementTotals": {
          "$ref": "#/definitions/IncrementTotals"
        },
        "AdviserCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessAdviserCharge"
          }
        },
        "ApplicationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "IsCleanApplication": {
          "type": "boolean"
        },
        "LastInformationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "BeneficiaryDetails": {
          "$ref": "#/definitions/BeneficiaryDetails"
        },
        "DeclarationDate": {
          "format": "date",
          "type": "string"
        },
        "MpaaTriggerDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "AdviceType": {
          "description": "Reference Data Type Code: ADVC\r\n<br />\r\nExample Value: INDE",
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/LifetimeAllowance"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: OMTY\r\n<br />\r\nExample Value: PERS",
          "type": "string"
        },
        "ApplicationDownloadDate": {
          "format": "date",
          "type": "string"
        },
        "AwardProfitShareThisYearFlag": {
          "type": "boolean",
          "description": "true if the plan is eligible for profitshare"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "IsNonAdvisedFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Proposal",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "Application": {
      "required": [
        "Reference",
        "Applicant"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reference": {
          "type": "string"
        },
        "Quote": {
          "$ref": "#/definitions/QuoteHref"
        },
        "Proposal": {
          "$ref": "#/definitions/ProposalHref"
        },
        "Applicant": {
          "$ref": "#/definitions/ApplicantHref"
        }
      }
    },
    "QuoteHref": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ProposalHref": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ApplicantHref": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateProposal": {
      "required": [
        "Application",
        "AdviserId"
      ],
      "type": "object",
      "properties": {
        "Quote": {
          "$ref": "#/definitions/QuoteHref"
        },
        "Application": {
          "$ref": "#/definitions/CreateApplication"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "MpaaTriggerDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "CaseId": {
          "type": "string"
        },
        "ApplicationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "IsCleanApplication": {
          "type": "boolean"
        },
        "LastInformationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "AdviceType": {
          "description": "Reference Data Type Code: ADVC\r\n<br />\r\nExample Value: INDE",
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/CreateLifetimeAllowance"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: ????\r\n<br />\r\nExample Value: ????",
          "type": "string"
        },
        "IsNonAdvisedFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateProposal",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateApplication": {
      "required": [
        "Applicant"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Applicant": {
          "$ref": "#/definitions/ApplicantHref"
        }
      }
    },
    "CreateLifetimeAllowance": {
      "type": "object",
      "properties": {
        "LifetimeAllowanceUsedPercentage": {
          "type": "number"
        },
        "LifetimeAllowanceUsedDifference": {
          "type": "number"
        },
        "LifetimeAllowanceProtection": {
          "$ref": "#/definitions/CreateLifetimeAllowanceProtection"
        }
      }
    },
    "CreateLifetimeAllowanceProtection": {
      "type": "object",
      "properties": {
        "ProtectionType": {
          "description": "Reference Data Type Code: PRTP\r\n<br />\r\nExample Value: PRIM",
          "type": "string"
        },
        "PercentageOfProtectedTaxFreeCash": {
          "type": "number"
        },
        "ProtectionAmount": {
          "type": "number"
        },
        "ProtectionFactor": {
          "type": "number"
        }
      }
    },
    "UpdateProposal": {
      "required": [
        "ProductType",
        "AdviserId",
        "StartDate"
      ],
      "type": "object",
      "properties": {
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "MpaaTriggerDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "ProposalStatusType": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "DeclarationDate": {
          "format": "date",
          "type": "string"
        },
        "ApplicationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "IsCleanApplication": {
          "type": "boolean"
        },
        "LastInformationReceivedDate": {
          "format": "date",
          "type": "string"
        },
        "CaseId": {
          "type": "string"
        },
        "AdviceType": {
          "description": "Reference Data Type Code: ADVC\r\n<br />\r\nExample Value: INDE",
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/UpdateLifetimeAllowance"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: ????\r\n<br />\r\nExample Value: ????",
          "type": "string"
        },
        "ApplicationDownloadDate": {
          "format": "date",
          "type": "string"
        },
        "AwardProfitShareThisYearFlag": {
          "type": "boolean",
          "description": "true if the plan is eligible for profitshare"
        },
        "IsNonAdvisedFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateProposal",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "UpdateLifetimeAllowance": {
      "type": "object",
      "properties": {
        "LifetimeAllowanceUsedPercentage": {
          "type": "number"
        },
        "LifetimeAllowanceUsedDifference": {
          "type": "number"
        },
        "LifetimeAllowanceProtection": {
          "$ref": "#/definitions/UpdateLifetimeAllowanceProtection"
        }
      }
    },
    "UpdateLifetimeAllowanceProtection": {
      "type": "object",
      "properties": {
        "ProtectionType": {
          "description": "Reference Data Type Code: PRTP\r\n<br />\r\nExample Value: PRIM",
          "type": "string"
        },
        "PercentageOfProtectedTaxFreeCash": {
          "type": "number"
        },
        "ProtectionAmount": {
          "type": "number"
        },
        "ProtectionFactor": {
          "type": "number"
        }
      }
    },
    "PatchProposal": {
      "type": "object",
      "properties": {
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "MpaaTriggerDate": {
          "format": "date",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "ProposalStatusType": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "DeclarationDate": {
          "format": "date",
          "type": "string"
        },
        "CaseId": {
          "type": "string"
        },
        "SubscriptionLimit": {
          "type": "number"
        },
        "RemainingSubscriptionValue": {
          "type": "number"
        },
        "ExistingSubscriptionValue": {
          "type": "number"
        },
        "ApplicationDownloadDate": {
          "format": "date",
          "type": "string"
        }
      },
      "xml": {
        "name": "PatchProposal",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "ProposalState": {
      "required": [
        "ProposalStatusType"
      ],
      "type": "object",
      "properties": {
        "ProposalStatus": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "ProposalStatusType": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        }
      },
      "xml": {
        "name": "ProposalState",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/proposal/v6"
      }
    },
    "CreateQuoteAdviserCharges": {
      "type": "object",
      "properties": {
        "CreateQuoteAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateQuoteAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "CreateQuoteAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateQuoteAdviserCharge": {
      "required": [
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateQuoteAdviserCharge",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteIdentifiables": {
      "type": "object",
      "properties": {
        "QuoteIdentifiable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteIdentifiable"
          }
        }
      },
      "xml": {
        "name": "QuoteIdentifiables",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteIdentifiable": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "QuoteIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteAdviserCharges": {
      "type": "object",
      "properties": {
        "UpdateQuoteAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateQuoteAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "UpdateQuoteAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteAdviserCharge": {
      "required": [
        "Id",
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateQuoteAdviserCharge",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteAdviserCharges": {
      "type": "object",
      "properties": {
        "QuoteAdviserCharge": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteAdviserCharge"
          }
        }
      },
      "xml": {
        "name": "QuoteAdviserCharges",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteAdviserCharge": {
      "required": [
        "Id",
        "IncrementType",
        "PeriodType",
        "BasisType",
        "IsPlanLevel"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PeriodType": {
          "description": "Reference Data Type Code: CTYP\r\n<br />\r\nExample Value: INIT",
          "type": "string"
        },
        "FrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "BasisType": {
          "description": "Reference Data Type Code: CBTY\r\n<br />\r\nExample Value: PRCT",
          "type": "string"
        },
        "ChargeTimingType": {
          "description": "Reference Data Type Code: CTTY\r\n<br />\r\nExample Value: BFOR",
          "type": "string"
        },
        "Value": {
          "type": "number"
        },
        "EffectiveDate": {
          "format": "date",
          "type": "string"
        },
        "DelayFlag": {
          "type": "boolean"
        },
        "Delay": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsInstruction": {
          "format": "int32",
          "type": "integer"
        },
        "FacilitationType": {
          "description": "Reference Data Type Code: FATY\r\n<br />\r\nExample Value: PREM",
          "type": "string"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationPercent": {
          "type": "number"
        },
        "EscalationDate": {
          "format": "date",
          "type": "string"
        },
        "IsPlanLevel": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "QuoteAdviserCharge",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteHeader": {
      "required": [
        "Id",
        "QuoteHeaderType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "QuoteHeaderType": {
          "enum": [
            "NewBusiness",
            "Change"
          ],
          "type": "string"
        },
        "Quote": {
          "$ref": "#/definitions/Quote"
        },
        "QuoteRequest": {
          "$ref": "#/definitions/QuoteRequest"
        }
      },
      "xml": {
        "name": "QuoteHeader",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote-header/v6"
      }
    },
    "Quote": {
      "required": [
        "Id",
        "Application",
        "ProductType",
        "AdviserId",
        "StartDate",
        "QuoteStatusType",
        "NewBusinessType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Application": {
          "$ref": "#/definitions/Application"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "CalculatedTargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "TargetAgeAboveTaxReliefThresholdFlag": {
          "type": "boolean"
        },
        "TargetAgeCapturedFlag": {
          "type": "boolean"
        },
        "QuoteStatusType": {
          "description": "Reference Data Type Code: QSTA\r\n<br />\r\nExample Value: INCO",
          "type": "string"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "InflationAdjustedQuoteFlag": {
          "type": "boolean"
        },
        "StandardGrowthRateFlag": {
          "type": "boolean"
        },
        "Increments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessIncrement"
          }
        },
        "IncrementTotals": {
          "$ref": "#/definitions/IncrementTotals"
        },
        "AdviserCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessAdviserCharge"
          }
        },
        "IllustrationFileName": {
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/LifetimeAllowance"
        },
        "QuoteHeaderId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: ????\r\n<br />\r\nExample Value: ????",
          "type": "string"
        },
        "OtherMoneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherMoney"
          }
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "IncludeLifetimeAllowanceCalculationFlag": {
          "type": "boolean"
        },
        "IsAdvisedByFinancialAdviserFlag": {
          "type": "boolean"
        },
        "SendCashWarningFlag": {
          "type": "boolean"
        },
        "CashFundPercentage": {
          "type": "number"
        },
        "IsBackDated": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Quote",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteRequest": {
      "required": [
        "Id",
        "RequestDetails"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RequestDetails": {
          "type": "string"
        }
      }
    },
    "NewBusinessIncrement": {
      "required": [
        "Id",
        "NewBusinessId",
        "IncrementType",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "PolicyId": {
          "description": "Account number from the policy admin system",
          "type": "string"
        },
        "IncrementReference": {
          "description": "Sonata increment reference (if known)",
          "type": "string"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "ExistingPlan": {
          "$ref": "#/definitions/ExistingPlan"
        },
        "Transfer": {
          "$ref": "#/definitions/QuoteTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/QuoteContribution"
        }
      }
    },
    "OtherMoney": {
      "type": "object",
      "properties": {
        "Amount": {
          "type": "number"
        },
        "AnnualManagementCharge": {
          "type": "number"
        },
        "PlanNumber": {
          "type": "string"
        }
      }
    },
    "QuoteContribution": {
      "required": [
        "Id",
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContributionValue"
          }
        }
      }
    },
    "UpdateQuoteHeader": {
      "required": [
        "QuoteRequest"
      ],
      "type": "object",
      "properties": {
        "QuoteRequest": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateQuoteHeader",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote-header/v6"
      }
    },
    "CreateQuoteHeader": {
      "required": [
        "QuoteRequest"
      ],
      "type": "object",
      "properties": {
        "QuoteRequest": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateQuoteHeader",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote-header/v6"
      }
    },
    "QuoteHeaderIdentifiable": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "QuoteHeaderIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote-header/v6"
      }
    },
    "CreateQuoteIncrements": {
      "type": "object",
      "properties": {
        "CreateQuoteIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateQuoteIncrement"
          }
        },
        "GroupIncrementsFlag": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateQuoteIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateQuoteIncrement": {
      "required": [
        "IncrementType"
      ],
      "type": "object",
      "properties": {
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "description": "Sonata increment reference (if known)",
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/CreateQuoteTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/CreateQuoteContribution"
        },
        "IncrementGroupMember": {
          "$ref": "#/definitions/CreateIncrementGroupMember"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        },
        "ExistingPlan": {
          "$ref": "#/definitions/ExistingPlan"
        }
      },
      "xml": {
        "name": "CreateQuoteIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateQuoteTransfer": {
      "required": [
        "TransferAmount"
      ],
      "type": "object",
      "properties": {
        "TransferAmount": {
          "type": "number"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "AmountOriginallyCrystallised": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: TDRW\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/CreateIncomeDrawdown"
        }
      }
    },
    "CreateQuoteContribution": {
      "required": [
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateQuoteContributionValue"
          }
        }
      },
      "xml": {
        "name": "CreateQuoteContribution",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateQuoteContributionValue": {
      "type": "object",
      "properties": {
        "ContributionType": {
          "description": "Reference Data Type Code: COBT\r\n<br />\r\nExample Value: PERC",
          "type": "string"
        },
        "ContributorType": {
          "description": "Reference Data Type Code: CNTB\r\n<br />\r\nExample Value: MPOS",
          "type": "string"
        },
        "MonetaryAmount": {
          "type": "number"
        },
        "Percentage": {
          "type": "number"
        },
        "EmploymentStatusType": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateQuoteContributionValue",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteIncrements": {
      "type": "object",
      "properties": {
        "QuoteIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateQuoteIncrement"
          }
        }
      },
      "xml": {
        "name": "UpdateQuoteIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteIncrement": {
      "required": [
        "Id",
        "IncrementType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PolicyId": {
          "type": "string",
          "description": "Account number from the policy admin system"
        },
        "IncrementReference": {
          "description": "Sonata increment reference (if known)",
          "type": "string"
        },
        "Transfer": {
          "$ref": "#/definitions/UpdateQuoteTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/UpdateQuoteContribution"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateQuoteIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteTransfer": {
      "required": [
        "TransferAmount"
      ],
      "type": "object",
      "properties": {
        "TransferAmount": {
          "type": "number"
        },
        "ProviderReference": {
          "type": "string"
        },
        "ProviderPlanReference": {
          "type": "string"
        },
        "AmountOriginallyCrystallised": {
          "type": "number"
        },
        "BlockTransferFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeFlag": {
          "type": "boolean"
        },
        "ProtectedPensionAgeType": {
          "description": "Reference Data Type Code: PPAT\r\n<br />\r\nExample Value: OCC",
          "type": "string"
        },
        "EarliestEntitledRetirementAge": {
          "format": "int32",
          "type": "integer"
        },
        "ProtectedTaxFreeCash": {
          "$ref": "#/definitions/ProtectedTaxFreeCashModel"
        },
        "BeneficiaryInDrawdownFlag": {
          "type": "boolean"
        },
        "DeathAtSeventyFiveAgeOrAboveFlag": {
          "type": "boolean"
        },
        "IncomeDrawdownType": {
          "description": "Reference Data Type Code: TDRW\r\n<br />\r\nExample Value: FLAC",
          "type": "string"
        },
        "IncomeDrawdown": {
          "$ref": "#/definitions/UpdateIncomeDrawdown"
        }
      },
      "xml": {
        "name": "UpdateQuoteTransfer",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteContribution": {
      "required": [
        "ContributionAmount"
      ],
      "type": "object",
      "properties": {
        "ContributionFrequencyType": {
          "description": "Reference Data Type Code: FRQY\r\n<br />\r\nExample Value: MNTH",
          "type": "string"
        },
        "ContributionAmount": {
          "type": "number"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "ClientEarnings": {
          "type": "number"
        },
        "EscalationType": {
          "description": "Reference Data Type Code: INDX\r\n<br />\r\nExample Value: FIXD",
          "type": "string"
        },
        "EscalationRate": {
          "type": "number"
        },
        "ContributionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateQuoteContributionValue"
          }
        }
      },
      "xml": {
        "name": "UpdateQuoteContribution",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateQuoteContributionValue": {
      "type": "object",
      "properties": {
        "ContributionType": {
          "description": "Reference Data Type Code: COBT\r\n<br />\r\nExample Value: PERC",
          "type": "string"
        },
        "ContributorType": {
          "description": "Reference Data Type Code: CNTB\r\n<br />\r\nExample Value: MPOS",
          "type": "string"
        },
        "MonetaryAmount": {
          "type": "number"
        },
        "Percentage": {
          "type": "number"
        },
        "EmploymentStatusType": {
          "description": "Reference Data Type Code: ERTY\r\n<br />\r\nExample Value: EMPL",
          "type": "string"
        }
      },
      "xml": {
        "name": "UpdateQuoteContributionValue",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteIncrements": {
      "type": "object",
      "properties": {
        "QuoteIncrement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewBusinessIncrement"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "QuoteIncrements",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteIncrement": {
      "required": [
        "Id",
        "NewBusinessId",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementType": {
          "description": "Reference Data Type Code: INCR\r\n<br />\r\nExample Value: TV",
          "type": "string"
        },
        "PolicyId": {
          "description": "Account number from the policy admin system",
          "type": "string"
        },
        "IncrementReference": {
          "description": "Sonata increment reference (if known)",
          "type": "string"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "Transfer": {
          "$ref": "#/definitions/QuoteTransfer"
        },
        "Contribution": {
          "$ref": "#/definitions/QuoteContribution"
        },
        "ActionType": {
          "description": "Reference Data Type Code: ANTY\r\n<br />\r\nExample Value: EXST",
          "type": "string"
        }
      },
      "xml": {
        "name": "QuoteIncrement",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteSearch": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Quotes": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "Quote": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Quote"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "Quotes",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateQuote": {
      "required": [
        "Application",
        "ProductType",
        "AdviserId",
        "StartDate",
        "NewBusinessType"
      ],
      "type": "object",
      "properties": {
        "Quote": {
          "$ref": "#/definitions/QuoteHref"
        },
        "Application": {
          "$ref": "#/definitions/CreateApplication"
        },
        "CaseId": {
          "type": "string"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "QuoteStatusType": {
          "description": "Reference Data Type Code: QSTA\r\n<br />\r\nExample Value: INCO",
          "type": "string"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/CreateLifetimeAllowance"
        },
        "InflationAdjustedQuoteFlag": {
          "type": "boolean"
        },
        "StandardGrowthRateFlag": {
          "type": "boolean"
        },
        "IncludeLifetimeAllowanceCalculationFlag": {
          "type": "boolean"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: ????\r\n<br />\r\nExample Value: ????",
          "type": "string"
        },
        "OtherMoneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateOtherMoney"
          }
        },
        "IsAdvisedByFinancialAdviserFlag": {
          "type": "boolean"
        },
        "SendCashWarningFlag": {
          "type": "boolean"
        },
        "CashFundPercentage": {
          "type": "number"
        },
        "IsBackDated": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CreateQuote",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "CreateOtherMoney": {
      "type": "object",
      "properties": {
        "Amount": {
          "type": "number"
        },
        "AnnualManagementCharge": {
          "type": "number"
        },
        "PlanNumber": {
          "type": "string"
        }
      }
    },
    "UpdateQuote": {
      "required": [
        "ProductType",
        "StartDate",
        "AdviserId"
      ],
      "type": "object",
      "properties": {
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "CaseId": {
          "type": "string"
        },
        "StartDate": {
          "format": "date",
          "type": "string"
        },
        "TargetDate": {
          "format": "date",
          "type": "string"
        },
        "TargetAge": {
          "format": "int32",
          "type": "integer"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "QuoteStatusType": {
          "description": "Reference Data Type Code: QSTA\r\n<br />\r\nExample Value: INCO",
          "type": "string"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "LifetimeAllowance": {
          "$ref": "#/definitions/UpdateLifetimeAllowance"
        },
        "InflationAdjustedQuoteFlag": {
          "type": "boolean"
        },
        "StandardGrowthRateFlag": {
          "type": "boolean"
        },
        "IncludeLifetimeAllowanceCalculationFlag": {
          "type": "boolean"
        },
        "IllustrationFileName": {
          "type": "string"
        },
        "OtherMoneyType": {
          "description": "Reference Data Type Code: ????\r\n<br />\r\nExample Value: ????",
          "type": "string"
        },
        "OtherMoneys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateOtherMoney"
          }
        },
        "IsAdvisedByFinancialAdviserFlag": {
          "type": "boolean"
        },
        "SendCashWarningFlag": {
          "type": "boolean"
        },
        "CashFundPercentage": {
          "type": "number"
        },
        "IsBackDated": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "UpdateQuote",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "UpdateOtherMoney": {
      "type": "object",
      "properties": {
        "Amount": {
          "type": "number"
        },
        "AnnualManagementCharge": {
          "type": "number"
        },
        "PlanNumber": {
          "type": "string"
        }
      }
    },
    "QuoteByCaseList": {
      "type": "object",
      "properties": {
        "Quote": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteByCase"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "QuoteByCaseList",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "QuoteByCase": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "QuoteByCase",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/quote/v6"
      }
    },
    "TaxFreeCashCalculationInputs": {
      "required": [
        "SavingsPlanValue"
      ],
      "type": "object",
      "properties": {
        "ProtectionType": {
          "description": "Reference Data Type Code: PRTP\r\n<br />\r\nExample Value: PRIM",
          "type": "string"
        },
        "CustomLTA": {
          "type": "number"
        },
        "SlaUsedPercentage": {
          "type": "number"
        },
        "SavingsPlanValue": {
          "type": "number"
        },
        "BlockTransferPlanValue": {
          "type": "number"
        },
        "IncrementGroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "HasExistingPlanNumber": {
          "type": "boolean"
        },
        "ExistingPlanNumber": {
          "type": "string"
        },
        "RelevantTaxYearLTA": {
          "type": "number"
        },
        "ProtectionTypeLTA": {
          "type": "number"
        },
        "April2006ProtectedTFC": {
          "type": "number"
        },
        "April2006BenefitAmount": {
          "type": "number"
        },
        "PartialTransferAfterApril2006Amount": {
          "type": "number"
        },
        "ProtectionTypeFactorLowerBounds": {
          "type": "number"
        },
        "ProtectionTypeFactorUpperBounds": {
          "type": "number"
        }
      },
      "xml": {
        "name": "TaxFreeCashCalculationInputs",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "TrackerEvents": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "TrackerEvent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackerEvent"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "TrackerEvents",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/tracker/v6"
      }
    },
    "TrackerEvent": {
      "required": [
        "Id",
        "NewBusinessType",
        "ReferenceId",
        "ProductType",
        "AdviserId",
        "EventDate"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "ApplicantId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FirstName": {
          "type": "string"
        },
        "Surname": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date",
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "StatusType": {
          "description": "Reference Data Type Code: PRST\r\n<br />\r\nExample Value: INCM",
          "type": "string"
        },
        "NewBusinessType": {
          "description": "Reference Data Type Code: NBTY\r\n<br />\r\nExample Value: QUOT",
          "type": "string"
        },
        "ReferenceId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProductType": {
          "description": "Reference Data Type Code: PRDC\r\n<br />\r\nExample Value: NIPP",
          "type": "string"
        },
        "AdviserId": {
          "format": "int32",
          "type": "integer"
        },
        "EventDescription": {
          "type": "string"
        },
        "EventDate": {
          "format": "date-time",
          "type": "string"
        },
        "IncrementId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PlanId": {
          "description": "Core PlanId stored in SMS for Increment quote and Increment application",
          "type": "string"
        }
      },
      "xml": {
        "name": "TrackerEvent",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/tracker/v6"
      }
    },
    "CreateTrackerEvent": {
      "required": [
        "ReferenceId",
        "EventDate"
      ],
      "type": "object",
      "properties": {
        "ReferenceId": {
          "description": "Sales Management Quote or Proposal ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "EventDescription": {
          "type": "string"
        },
        "EventDate": {
          "format": "date-time",
          "type": "string"
        },
        "IncrementId": {
          "description": "Sales Management increment ID (if known)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementReference": {
          "description": "Sonata increment reference (if known)",
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateTrackerEvent",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/tracker/v6"
      }
    },
    "TrackerIdentifiable": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "TrackerIdentifiable",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/tracker/v6"
      }
    },
    "CreateWithdrawalInstruction": {
      "required": [
        "IncrementGroupId"
      ],
      "type": "object",
      "properties": {
        "IncrementGroupId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OneOffWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalFrequencyType": {
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "CreateWithdrawalInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "WithdrawalInstructions": {
      "type": "object",
      "properties": {
        "WithdrawalInstruction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WithdrawalInstruction"
          },
          "readOnly": true
        }
      },
      "xml": {
        "name": "WithdrawalInstructions",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "WithdrawalInstruction": {
      "required": [
        "Id",
        "IncrementGroup"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IncrementGroup": {
          "$ref": "#/definitions/IncrementGroup"
        },
        "NewBusinessId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OneOffWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalFrequencyType": {
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "WithdrawalInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    },
    "UpdateWithdrawalInstruction": {
      "type": "object",
      "properties": {
        "OneOffWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalAmount": {
          "type": "number"
        },
        "RegularWithdrawalFrequencyType": {
          "type": "string"
        },
        "RegularIncomePaymentDay": {
          "format": "int32",
          "type": "integer"
        },
        "EscalationType": {
          "type": "string"
        },
        "EscalationPercentage": {
          "type": "number"
        },
        "PaymentBankAccountId": {
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      },
      "xml": {
        "name": "UpdateWithdrawalInstruction",
        "namespace": "http://www.royallondon.com/xsd/service/pensions/sales/new-business/v6"
      }
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "oauth2": {
      "type": "oauth2",
      "description": "Login",
      "flow": "implicit",
      "authorizationUrl": "https://dev-login.testroyallondon.com/stub/connect/authorize",
      "scopes": {
        "internal": "Internal Application"
      }
    }
  }
}